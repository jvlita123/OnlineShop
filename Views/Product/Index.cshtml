@model X.PagedList.IPagedList<Sklep_MVC_Projekt.Models.Product>
@using X.PagedList.Mvc.Core
@{
	ViewData["Title"] = "Products";
}

<p>
	<a asp-action="AddNewProduct">Add New Product</a>
</p>

@using (Html.BeginForm("Index", "Product", FormMethod.Get))
{
	<p>
		Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
		<input type="submit" value="Search" />
	</p>
}
<table class="table">
	<tr>
		<th>
			@Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter=ViewBag.CurrentFilter })
		</th>
		<th>
			Price
		</th>
		<th></th>
	</tr>
</table>

<div class="container-products">
	@foreach (var item in Model)
	{
		<a class="nav-link text-light" asp-area="" asp-controller="Product" asp-action="ProductDetails" asp-route-id="@item.ProductID">
			<div class="box">

				@if (item.Photo.Count > 0)
				{
					<img class="img-product" src="~/Photos/@item.Photo.FirstOrDefault().Path" height="50" width="50" />
				}
				<div id="text">
					@Html.DisplayFor(modelItem => item.ProductName)

					@Html.DisplayFor(modelItem => item.Price)
				</div>
			</div>
		</a>

	}

</div>

<br />
	Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@*


@Html.ActionLink("Details", "ProductDetails", new {  id=item.ProductID  }) |
@Html.ActionLink("Delete", "DeleteProduct", new {  id=item.ProductID }) |
@Html.ActionLink("Edit", "Edit", new {  id=item.ProductID }) |
@Html.ActionLink("Add to Shopping cart", "AddCustomerProduct", "CustomerProduct",new {  id=item.ProductID })
*@